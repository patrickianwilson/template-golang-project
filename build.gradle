project.version = 'dev.1'
project.group = "com.github.patrickianwilson"

if (System.getenv("BUILD_NUMBER") != null) {
    def majorVersion = "1.0" //eventually override with a lookup
    def buildSetVersion = "0" //eventually look this up too.
    project.version = "${majorVersion}.${buildSetVersion}.${System.getenv("BUILD_NUMBER")}"
}

ext {
    mainJsPackage="github.com/patrickianwilson/client"
    mainPackage = "github.com/patrickianwilson/server"
    platformTargets = ["linux:amd64"]

    moduleName = "template-golang-project"  //changeme!

    dockerTag = "${project.moduleName.toLowerCase()}:latest"
    dockerFile = "$projectDir/Dockerfile"
    dockerImagePath="us.gcr.io/inlaid-citron-94802/services/${project.moduleName.toLowerCase()}:${project.version}"
}

buildscript {
    repositories {
        maven {
            url "http://repo.wilsonsinquest.com/nexus/content/repositories/releases/"
        }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "com.github.patrickianwilson:ProjectConventionsGradlePlugin:1.0.+"
    }
}



apply plugin: "project.gopherjs"
apply plugin: "project.go"
apply plugin: "facet.docker"

task copyWebAssets(type: Copy) {
    from "${projectDir}/assets"
    into "${buildDir}/gopath/assets"
}

tasks.assembleGoJs.dependsOn("copyWebAssets")
tasks.assembleDockerImage.dependsOn(["copyWebAssets", "assembleGolinuxamd64"])
tasks.assembleDockerImageRemote.dependsOn(["copyWebAssets", "assembleGolinuxamd64"])
//
//task configureZip {
//    finalizedBy distZip
//    doLast {
//        distZip.archiveName = "${moduleName}.zip"
//        startScripts.applicationName = "${moduleName}"
//    }
//}
//
//
//release.dependsOn "configureZip"
