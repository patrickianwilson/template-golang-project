ext {
    moduleName = "template-golang-project" //change me!!
    mainPackage = "github.com/patrickianwilson/web"
    platformTargets = ["js:wasm"]
    testPackages = [] //change me!
}
project.version = 'dev.1'
project.group = "com.github.patrickianwilson"

buildscript {
    repositories {
        maven {
            name = 'mavenInternal'
            url "https://maven.pkg.jetbrains.space/inquest/p/buildtools/gradle-plugins-internal"
            credentials {
                username = spaceUsername
                password = spacePassword
            }
        }
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath "com.inquestdevops:WarblerBuildGradlePlugin:1.0.+"
    }
}
project.apply plugin: "maven-publish"
project.tasks.maybeCreate("release")
apply plugin: "project.go"

project.configurations {
    wasm
}
//bundle the WASM into a zip
def taskName = "packageWasm"
def packageName = project.ext.mainPackage.split("/").last()
project.task([type: Zip], taskName, {
    from "${project.buildDir}/jswasm/bin"
    include "**/*"
})
project.tasks[taskName].dependsOn("copyGoJsShim")
project.artifacts {
    wasm project.tasks[taskName]
}

publishing {
    publications {
        Library(MavenPublication) {
            artifactId "${project.ext.moduleName}"
            artifact packageWasm
        }
    }
    repositories {
        maven {
            name = 'mavenInternal'
            url "https://maven.pkg.jetbrains.space/inquest/p/buildtools/build-tools"
            credentials {
                username = spaceUsername
                password = spacePassword
            }
        }
        mavenLocal()
    }
}

project.tasks.pkg.dependsOn(taskName)

project.task([type: Exec, dependsOn: ["copyDeps"]], "copyGoJsShim", {
    //this task will copy the Web Assembly Import Object from the GOROOT folder into the output location
    commandLine 'cp', "\$(go env GOROOT)/misc/wasm/wasm_exec.js", "$project.buildDir/jswasm/bin"

    inputs.dir "$project.projectDir/src"
    outputs.dir "$project.buildDir/jswasm/bin"

})

if (project.version != "dev.1") {
    project.tasks.release.dependsOn("publishAllPublicationsToMavenInternalRepository")
} else {
    project.tasks.release.dependsOn("publishToMavenLocal")
}